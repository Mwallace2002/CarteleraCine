[{"C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\index.js":"1","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\reportWebVitals.js":"2","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\App.js":"3","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Info.js":"4","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Formulario.js":"5","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Movie.js":"6","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Favoritos.js":"7","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\NavBar.js":"8","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Filtros.js":"9","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Nosotros.js":"10","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Busqueda.js":"11"},{"size":535,"mtime":1699905456000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1699905456000,"results":"14","hashOfConfig":"13"},{"size":841,"mtime":1700944826000,"results":"15","hashOfConfig":"13"},{"size":1413,"mtime":1700968277393,"results":"16","hashOfConfig":"13"},{"size":4549,"mtime":1700968218396,"results":"17","hashOfConfig":"13"},{"size":6964,"mtime":1700970190570,"results":"18","hashOfConfig":"13"},{"size":2232,"mtime":1700967049168,"results":"19","hashOfConfig":"13"},{"size":1031,"mtime":1700518146000,"results":"20","hashOfConfig":"13"},{"size":3021,"mtime":1700968696424,"results":"21","hashOfConfig":"13"},{"size":334,"mtime":1700519202000,"results":"22","hashOfConfig":"13"},{"size":2009,"mtime":1700970783876,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c5m592",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\index.js",[],[],"C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\reportWebVitals.js",[],[],"C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\App.js",["62"],[],"import NavBar from \"./components/NavBar\";\nimport Favoritos from \"./components/Favoritos\";\nimport Formulario from \"./components/Formulario\";\nimport Info from \"./components/Info\";\nimport Movie from \"./components/Movie\";\nimport {BrowserRouter, Link, Route, Routes} from \"react-router-dom\";\nimport './CSS/App.css';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App bg-dark\">\n      <BrowserRouter>\n        < NavBar />\n        \n        <Routes>\n          <Route exact path=\"/\" element={<Movie/>}/>\n          <Route exact path=\"/movie\" element={<Movie/>}/>\n          <Route exact path=\"/formulario\" element={<Formulario/>}/>\n          <Route exact path=\"/info\" element={<Info/>}/>\n          <Route exact path=\"/favoritos\" element={<Favoritos/>}/>\n\n        </Routes>\n      \n      </BrowserRouter>\n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Info.js",[],[],"C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Formulario.js",[],[],"C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Movie.js",["63","64"],[],"import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Filtros from './Filtros';\r\nimport Busqueda from './Busqueda';\r\n\r\nfunction Movie() {\r\n  const [peliculas, setPeliculas] = useState([]);\r\n  const [busqueda, setBusqueda] = useState('');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [favoritos, setFavoritos] = useState([]);\r\n  const [popupMovie, setPopupMovie] = useState(null);\r\n\r\n  const [isShaking, setIsShaking] = useState({});\r\n\r\n  // Función para activar la animación en una imagen específica\r\n  const handleMouseEnter = (id) => {\r\n    setIsShaking({ ...isShaking, [id]: true });\r\n  };\r\n\r\n  // Función para desactivar la animación en una imagen específica\r\n  const handleMouseLeave = (id) => {\r\n    setIsShaking({ ...isShaking, [id]: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const apiKey = 'b23bf060f0972c01674df2ac3fa6c0a6';\r\n    const apiUrl = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}`; \r\n    axios.get(apiUrl)\r\n      .then((response) => {\r\n        setPeliculas(response.data.results);\r\n      });\r\n  }, []);\r\n\r\n  const storedFavorites = JSON.parse(localStorage.getItem('favoritos')) || [];\r\n  useEffect(() => {\r\n    setFavoritos(storedFavorites);\r\n  }, [storedFavorites]);\r\n\r\n\r\n  \r\n  const addToFavorites = (movie) => {\r\n    const updatedFavorites = [...favoritos, movie];\r\n    setFavoritos(updatedFavorites);\r\n    localStorage.setItem('favoritos', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const removeFromFavorites = (movieToRemove) => {\r\n    const updatedFavorites = favoritos.filter(\r\n      (movie) => movie.id !== movieToRemove.id\r\n    );\r\n    setFavoritos(updatedFavorites);\r\n    localStorage.setItem('favoritos', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const isInFavorites = (movie) => {\r\n    return favoritos.some((favMovie) => favMovie.id === movie.id);\r\n  };\r\n\r\n  const getMovieDetails = async (movie) => {\r\n    const apiKey = 'b23bf060f0972c01674df2ac3fa6c0a6';\r\n    const res = await axios.get(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${apiKey}`);\r\n    return res.data;\r\n  };\r\n\r\n  const openPopup = async (movie) => {\r\n    const details = await getMovieDetails(movie);\r\n    setPopupMovie(details);\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setPopupMovie(null);\r\n  };\r\n\r\n  const handleBusqueda = (event) => {\r\n    setBusqueda(event.target.value);\r\n  };\r\n\r\n  const handleFiltro = () => {\r\n    setShowFilters(!showFilters);\r\n  };\r\n\r\n  const movieContainerRef = useRef(null);\r\n  const filterButtonRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const movieContainer = movieContainerRef.current;\r\n    const filterButton = filterButtonRef.current;\r\n  \r\n    if (movieContainer && filterButton) {\r\n      const containerWidth = movieContainer.offsetWidth;\r\n      const screenWidth = window.innerWidth;\r\n      const distanceFromRight = screenWidth - containerWidth;\r\n      filterButton.style.marginRight = `${distanceFromRight}px`;\r\n    }\r\n  }, [peliculas, busqueda]);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"bg-warning\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '10px', backgroundColor: 'lightgray' }}>\r\n        <div className=\"col-md-4 item-center text-center\">\r\n          <Busqueda setPeliculas={setPeliculas} />\r\n        </div>\r\n        <div className=\"col-md-4 text-center\">\r\n          <h1 className=\"text-black\">Películas Populares</h1>\r\n        </div>\r\n        <div className=\"col-md-4 item-center text-center\" ref={filterButtonRef}>\r\n          <button className=\"btn btn-light mt-2 bold-btn\" style={{ borderRadius: '10px' }} onClick={handleFiltro}>Filtrar</button>\r\n          {showFilters && <Filtros setPeliculas={setPeliculas} />}\r\n        </div>\r\n      </nav>\r\n\r\n      <main className=\"container bg-dark\">\r\n        <div className=\"row\" ref={movieContainerRef}>\r\n          {peliculas\r\n            .filter((pelicula) => pelicula.title.toLowerCase().includes(busqueda.toLowerCase()))\r\n            .map((pelicula) => (\r\n              <div key={pelicula.id} className=\"col-4 fw-bold\">\r\n                <div style={{ margin: '3px', padding: '5px', textAlign: 'center' }}>\r\n                  <div className=\"text-white\" style={{ marginBottom: '10px' }}>\r\n                    {pelicula.title}\r\n                  </div>\r\n                  <img\r\n                    src={'https://www.themoviedb.org/t/p/w440_and_h660_face' + pelicula.poster_path}\r\n                    alt={pelicula.title}\r\n                    style={{\r\n                      maxWidth: '100%',\r\n                      cursor: 'pointer',\r\n                      borderRadius: '10px',\r\n                      animation: isShaking[pelicula.id] ? 'shake 2s' : 'none', // Aplicar la animación cuando está activada\r\n                    }}\r\n                    onClick={() => openPopup(pelicula)}\r\n                    onMouseEnter={() => handleMouseEnter(pelicula.id)} // Activar la animación al pasar el mouse\r\n                    onMouseLeave={() => handleMouseLeave(pelicula.id)} // Desactivar la animación al quitar el mouse\r\n                  />\r\n                  {isInFavorites(pelicula) ? (\r\n                    <button className=\"btn btn-danger mt-2 bold-btn\" onClick={() => removeFromFavorites(pelicula)}>Quitar de Favoritos</button>\r\n                  ) : (\r\n                    <button className=\"btn btn-warning mt-2 bold-btn\" onClick={() => addToFavorites(pelicula)}>Añadir a Favoritos</button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        {popupMovie && (\r\n          <div className=\"popup\" style={{\r\n            position: 'fixed',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: '80%',\r\n            maxHeight: '150%',\r\n            backgroundColor: 'rgba(200, 200, 200, 0.9)',\r\n            zIndex: '1000',\r\n            padding: '20px',\r\n            borderRadius: '5px',\r\n            overflowY: 'auto',\r\n          }}>\r\n            <span className=\"close\" onClick={closePopup} style={{ position: 'absolute', top: '5px', right: '10px', fontSize: '20px', cursor: 'pointer' }}>&times;</span>\r\n            <div className=\"movie-details\">\r\n              <img\r\n                src={'https://www.themoviedb.org/t/p/w440_and_h660_face' + popupMovie.poster_path}\r\n                alt={popupMovie.title}\r\n                style={{ maxWidth: '25%', cursor: 'pointer' }}\r\n              />\r\n              <h2>{popupMovie.title}</h2>\r\n\r\n              <p>Sinopsis: {popupMovie.overview}</p>\r\n\r\n              <p>Duración: {popupMovie.runtime} minutos</p>\r\n\r\n              <p>Géneros: {popupMovie.genres.map(g => g.name).join(', ')}</p>\r\n\r\n              <p>Fecha de estreno: {popupMovie.release_date}</p>\r\n\r\n              <p>Rating: {popupMovie.vote_average}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Favoritos.js",["65"],[],"import React, { useState, useEffect } from 'react';\r\n\r\nconst Favoritos = () => {\r\n  const storedFavorites = JSON.parse(localStorage.getItem('favoritos')) || [];\r\n  const [favorites, setFavorites] = useState(storedFavorites);\r\n  const [hoveredMovie, setHoveredMovie] = useState(null);\r\n\r\n  const removeFromFavorites = (movieToRemove) => {\r\n    const updatedFavorites = favorites.filter(\r\n      (movie) => movie.id !== movieToRemove.id\r\n    );\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem('favoritos', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  return (\r\n    \r\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '20px', maxWidth: '1200px' }}>\r\n        <h1 className= \"bg-warning text-black\" style={{ marginBottom: '20px', gridColumn: '1 / -1', textAlign: 'center', color: 'white' }}>Favoritos</h1>\r\n        {favorites.length === 0 ? (\r\n          <div style={{ gridColumn: '1 / -1', textAlign: 'center', fontSize: '200px', marginTop: '20px' }}>\r\n            <p className='text-white'>No hay películas guardadas en favoritos</p>\r\n          </div>\r\n        ) : (\r\n          favorites.map((movie) => (\r\n            <div key={movie.id} style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n              <img\r\n                src={'https://www.themoviedb.org/t/p/w440_and_h660_face' + movie.poster_path}\r\n                alt={movie.title}\r\n                style={{\r\n                  maxWidth: '100%',\r\n                  cursor: 'pointer',\r\n                  borderRadius: '8px',\r\n                  marginBottom: '10px',\r\n                  animation: hoveredMovie === movie.id ? 'shake 2s ease-in-out infinite' : 'none',\r\n                }}\r\n                onMouseEnter={() => setHoveredMovie(movie.id)}\r\n                onMouseLeave={() => setHoveredMovie(null)}\r\n              />\r\n              <p>{movie.title}</p>\r\n              <button className=\"btn btn-danger bold-btn\" onClick={() => removeFromFavorites(movie)}>\r\n                Eliminar de Favoritos\r\n              </button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favoritos;\r\n","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\NavBar.js",[],[],"C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Filtros.js",["66","67"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  popularidadAlta: false,\r\n  generoAccion: false,\r\n  generoComedia: false,\r\n  anioLanzamiento: ''\r\n};\r\n\r\nexport default function Filtros({ setPeliculas }) {\r\n  const [filtros, setFiltros] = useState(initialState);\r\n  const [filtrosGuardados, setFiltrosGuardados] = useState(initialState);\r\n\r\n  const aplicarFiltros = async () => {\r\n    try {\r\n      let url = 'https://api.themoviedb.org/3/discover/movie?api_key=b23bf060f0972c01674df2ac3fa6c0a6';\r\n\r\n      const { popularidadAlta, generoAccion, generoComedia, anioLanzamiento } = filtros;\r\n\r\n      if (popularidadAlta) {\r\n        url += '&sort_by=popularity.desc';\r\n      }\r\n\r\n      if (generoAccion) {\r\n        url += '&with_genres=28';\r\n      }\r\n\r\n      if (generoComedia) {\r\n        url += '&with_genres=35';\r\n      }\r\n\r\n      if (anioLanzamiento) {\r\n        url += `&primary_release_year=${anioLanzamiento}`;\r\n      }\r\n\r\n      const response = await axios.get(url);\r\n      setPeliculas(response.data.results);\r\n\r\n      // Guardar los filtros aplicados\r\n      setFiltrosGuardados({ ...filtros });\r\n    } catch (error) {\r\n      console.error('Error al obtener películas:', error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setFiltros((prevFiltros) => ({\r\n      ...prevFiltros,\r\n      [name]: checked\r\n    }));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFiltros((prevFiltros) => ({\r\n      ...prevFiltros,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const limpiarFiltros = () => {\r\n    setFiltros(initialState);\r\n    setFiltrosGuardados(initialState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Filtros</h3>\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"popularidadAlta\"\r\n          checked={filtros.popularidadAlta}\r\n          onChange={handleCheckboxChange}\r\n        />\r\n        <label>Popularidad Alta</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"generoAccion\"\r\n          checked={filtros.generoAccion}\r\n          onChange={handleCheckboxChange}\r\n        />\r\n        <label>Género Acción</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"generoComedia\"\r\n          checked={filtros.generoComedia}\r\n          onChange={handleCheckboxChange}\r\n        />\r\n        <label>Género Comedia</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          className='mt-2 text-black text-center'\r\n          type=\"number\"\r\n          name=\"anioLanzamiento\"\r\n          value={filtros.anioLanzamiento}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Año de lanzamiento\"\r\n        />\r\n      </div>\r\n      <button className='btn btn-light mt-2 bold-btn' onClick={aplicarFiltros}>Aplicar Filtros</button>\r\n      <button className='btn btn-light mt-2 bold-btn' onClick={limpiarFiltros}>Limpiar Filtros</button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Nosotros.js",[],[],"C:\\Users\\marti\\Downloads\\proyecto v2\\proyecto\\src\\components\\Busqueda.js",["68"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Busqueda({ setPeliculas }) {\r\n  const [busqueda, setBusqueda] = useState('');\r\n\r\n  const cargarPeliculasPrincipales = async () => {\r\n    const apiKey = 'b23bf060f0972c01674df2ac3fa6c0a6';\r\n    const apiUrl = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}`;\r\n\r\n    try {\r\n      const response = await axios.get(apiUrl);\r\n      setPeliculas(response.data.results);\r\n    } catch (error) {\r\n      console.error('Error al obtener películas:', error);\r\n    }\r\n  };\r\n\r\n  const handleVolverPrincipal = () => {\r\n    cargarPeliculasPrincipales();\r\n    setBusqueda(''); // Limpiar el campo de búsqueda al volver a las películas principales\r\n  };\r\n\r\n  const handleBusqueda = async () => {\r\n    if (!busqueda) {\r\n      cargarPeliculasPrincipales(); // Si no hay texto en la búsqueda, cargar las películas principales\r\n      return;\r\n    }\r\n\r\n    const apiKey = 'b23bf060f0972c01674df2ac3fa6c0a6';\r\n    const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${busqueda}`;\r\n\r\n    try {\r\n      const response = await axios.get(apiUrl);\r\n      setPeliculas(response.data.results);\r\n    } catch (error) {\r\n      console.error('Error al obtener películas:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setBusqueda(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"item-center\">\r\n        <input\r\n          type=\"text\"\r\n          value={busqueda}\r\n          onChange={handleChange}\r\n          placeholder=\"Buscar películas...\"\r\n          style={{ marginRight: '10px' }} // Añade un margen a la derecha del campo de búsqueda\r\n        />\r\n        <button className='btn btn-light bold-btn item-center' onClick={handleBusqueda}>Buscar</button>\r\n      </div>\r\n      <button className='btn btn-light mt-2 bold-btn' onClick={handleVolverPrincipal}>Volver a las películas principales</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Busqueda;\r\n",{"ruleId":"69","severity":1,"message":"70","line":6,"column":24,"nodeType":"71","messageId":"72","endLine":6,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":34,"column":9,"nodeType":"75","endLine":34,"endColumn":78},{"ruleId":"69","severity":1,"message":"76","line":74,"column":9,"nodeType":"71","messageId":"72","endLine":74,"endColumn":23},{"ruleId":"69","severity":1,"message":"77","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"77","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"78","line":13,"column":10,"nodeType":"71","messageId":"72","endLine":13,"endColumn":26},{"ruleId":"69","severity":1,"message":"77","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'storedFavorites' logical expression could make the dependencies of useEffect Hook (at line 37) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'storedFavorites' in its own useMemo() Hook.","VariableDeclarator","'handleBusqueda' is assigned a value but never used.","'useEffect' is defined but never used.","'filtrosGuardados' is assigned a value but never used."]